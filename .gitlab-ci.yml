build-cpp:
  stage: build
  tags:
    - cpp
    - hpcagainstcorona
  before_script:
    - apt -qq -y install libeigen3-dev
  script:
    - cd cpp
    - mkdir build && cd build
    - cmake -G Ninja -DEPI_USE_BUNDLED_EIGEN=OFF ..
    - cmake --build .
  artifacts:
    expire_in: 2 hrs
    paths:
      - cpp/build/

build-py:
  tags:
   - docker
  image: quay.io/pypa/manylinux2010_x86_64
  stage: build
  before_script:
    - yum install ninja-build -qy
    - cd pycode
  script:
    - /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel
    - /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel
    - /opt/python/cp38-cp38/bin/python setup.py bdist_wheel
    - for whl in dist/*.whl; do auditwheel repair "$whl"; done
  artifacts:
    paths:
      - pycode/wheelhouse/*.whl

# run tests using the binary built before
test-cpp:
  tags:
    - cpp
    - hpcagainstcorona
  stage: test
  dependencies:
    - build-cpp
  script:
    - cd cpp/build/tests
    - ./runUnitTests --gtest_output="xml:report.xml"
  artifacts:
    reports:
      junit: cpp/build/tests/report.xml

test-py:
  tags:
    - cpp
    - hpcagainstcorona
  stage: test
  dependencies:
    - build-py
  before_script:
    - apt -qq -y install python3.7 python3-pip
    - python3 -m pip install --upgrade pip
    - for pkg in `ls pycode/wheelhouse/*37*.whl`; do python3 -m pip install $pkg; done
  script:
    - cd pycode/test
    - python3 -m unittest
    - getrkidata --help
    - getpopuldata --help
    - getjhdata --help
    - getspaindata --help
    - getalldata --help

download-data:
  tags:
    - cpp
    - hpcagainstcorona
  stage: test
  dependencies:
    - build-py
  before_script:
    - apt -qq -y install python3.7 python3-pip
    - python3 -m pip install --upgrade pip
    - for pkg in `ls pycode/wheelhouse/*37*.whl`; do python3 -m pip install $pkg; done
  script:
    - mkdir data
    - getrkidata -o data
    - getpopuldata -o data
    - getjhdata -o data
    - getspaindata -o data
  artifacts:
    paths:
      - data/*.json
      - data/Germany/*.json
      - data/Spain/*.json
      - data/France/*.json
      - data/Italy*.json
      - data/SouthKorea/*.json
      - data/US/*.json
      - data/China/*.json

build-js:
  tags:
    - npm
    - hpcagainstcorona
  stage: build
  before_script:
    - cd frontend
    - npm install
  script:
    - echo "Building app deployment"
    - npm run build
    - echo "Building done"
  artifacts:
    paths:
      - frontend/build/

build-js-bindings:
  stage: build
  tags:
   - docker
  image: trzeci/emscripten
  script:
  - cd frontend
  - mkdir build && cd build
  - emcmake cmake ..
  - cmake --build .
  artifacts:
    paths:
    - frontend/build/secir.js
    - frontend/build/secir.wasm

www:
  tags:
    - native
    - hpcagainstcorona
  stage: deploy
  dependencies:
    - build-js
    - download-data
  script:
    - echo "Deploying to server"
    - cp -rv frontend/build/* /var/www/html
    - cp -v data/Germany/*_rki.json /var/www/html/assets
    - echo "Deployed"
  only:
    - master
