name: "Build MSVC"
description: "Build memilio c++ library using MSVC on Windows"
inputs:
  config: 
    description: "Configuration to build (Release or Debug, see CMAKE_BUILD_TYPE)"
    required: true
    default: "Release"
  version:
    description: "Version of the compiler that is used (latest or min)."
    required: true
    default: "latest"
  optional-dependencies:
    description: "Build the library with optional dependencies (ON or OFF)"
    required: false
    default: "ON"
runs:
  using: "composite"
  steps:
    - name: Install build tools
      shell: pwsh
      run: |
        pip install ninja
        pip install conan
    - name: Cache Conan packages
      uses: actions/cache@v2
      with:
        #need to cache two folders (user_home and user_home_short) on windows (https://docs.conan.io/en/latest/reference/conanfile/attributes.html#short-paths)
        path: |
          ~/.conan
          C:/.conan
        key: conan-data-msvc-${{ inputs.config }}-${{ inputs.version}}-6 #bump number to clear cache
    - name: Build
      shell: cmd /C call {0}
      run: |
        cd cpp
        mkdir build-win
        cd build-win
        if min==${{ inputs.version }} (
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        ) else (
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        )
        cmake --version
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ inputs.config }} ..
        cmake --build . -- -j 4
    - name: Upload built test directory
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: build-cpp-windows-msvc-${{ inputs.version }}-${{ inputs.config }}-${{ inputs.optional-dependencies == 'ON' && 'full' || 'part'}}
        path: cpp/build-win/tests
        retention-days: 1