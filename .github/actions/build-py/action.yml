name: "Build Python Package"
description: "Build one of the MEmilio Python packages. Creates wheel as artifact."
inputs:
  package:
    description: "Package to build."
    required: true
runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        yum install ninja-build -qy
        if [[ "${{ inputs.package }}" == "simulation" ]]; then
          /opt/python/cp36-cp36m/bin/pip install conan
          /opt/python/cp37-cp37m/bin/pip install conan
          /opt/python/cp38-cp38/bin/pip install conan
        fi
    - name: Make artifact dir
      shell: bash
      run: |
        cd pycode/memilio-${{ inputs.package }}/
        mkdir wheelhouse
    - name: Build Python Wheels
      shell: bash
      run: |
        cd pycode/memilio-${{ inputs.package }}/
        if [[ "${{ inputs.package }}" == "simulation" ]]; then
          SETUP36ARGS="-DCONAN_COMMAND=/opt/python/cp36-cp36m/bin/conan -DPYTHON_EXECUTABLE=/opt/python/cp36-cp36m/bin/python"
          SETUP37ARGS="-DCONAN_COMMAND=/opt/python/cp37-cp37m/bin/conan -DPYTHON_EXECUTABLE=/opt/python/cp37-cp37m/bin/python"
          SETUP38ARGS="-DCONAN_COMMAND=/opt/python/cp38-cp38/bin/conan -DPYTHON_EXECUTABLE=/opt/python/cp38-cp38/bin/python"
        fi
        /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel -- $SETUP36ARGS
        /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel -- $SETUP37ARGS
        /opt/python/cp38-cp38/bin/python setup.py bdist_wheel -- $SETUP38ARGS
        if [[ -f "CMakeLists.txt" ]]; then 
          # includes native dependencies in the wheel
          for whl in dist/*.whl; do auditwheel repair "$whl"; done
        else
          # no auditwheel necessary for pure python packages, so only copy the wheels to the same output directory 
          cp dist/*.whl wheelhouse
        fi
        cp -r wheelhouse ..
    - name: Upload Python Wheels
      uses: actions/upload-artifact@v2
      with:
        name: python-wheels-${{ inputs.package }}
        path: pycode/wheelhouse