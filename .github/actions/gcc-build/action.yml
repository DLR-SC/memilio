name: "GCC Build"
description: "Build the C++ library with GCC on Linux."
inputs:
  config: 
    description: "Configuration to build (Release or Debug, see CMAKE_BUILD_TYPE)"
    required: true
    default: "Release"
  version:
    description: "Version of the compiler to use (min or latest)."
    required: true
    default: "latest"
  coverage:
    description: "Turn coverage on (ON or OFF)"
    required: false
    default: "OFF"
  sanitize-ub:
    description: "Turn on UB sanitzer (ON or OFF)"
    required: false
    default: "OFF"
  sanitize-addr:
    description: "Turn on address sanitzer (ON or OFF)"
    required: false
    default: "OFF"
runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq -y install libhdf5-dev lcov
    - name: Build
      shell: bash
      run: |
        cd cpp
        if [[ "${{ inputs.coverage }}" == "min" ]]; then
          export CC=/usr/bin/gcc-7
          export CXX=/usr/bin/g++-7
        else        
          export CC=/usr/bin/gcc-10
          export CXX=/usr/bin/g++-10
        fi
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DEPI_BUILD_EPI_IO=ON -DEPI_TEST_COVERAGE=${{ inputs.coverage }} -DEPI_SANITIZE_ADDRESS=${{ inputs.sanitize-addr }} -DEPI_SANITIZE_UNDEFINED=${{ inputs.sanitize-ub }} ..
        make -j4
    - name: create build dir archive
      shell: bash
      run: |
        cd cpp
        tar -czf build.tar.gz build
    - name: Upload built test directory
      uses: actions/upload-artifact@v2
      with:
        name: build-cpp-linux-gcc-${{ inputs.version }}-${{ inputs.config }}
        path: cpp/build.tar.gz
        retention-days: 1
